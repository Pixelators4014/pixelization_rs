searchState.loadedDescShard("rclrs", 0, "Rust client library for ROS 2.\nIt was attempted to add a waitable to a wait set twice.\nParameter was already declared and a new declaration was …\n<code>rcl_init()</code> already called\n<code>rcl_shutdown()</code> already called\nAn enum capturing the various possible function signatures …\nThe signal that establishes that a topic is alive comes …\nThis struct is given to the discriminator function of the …\nFailed to allocate memory\nSend messages but do not guarantee delivery.\nA boolean value.\nA boolean parameter.\nAn array of booleans.\nAn array of booleans.\nA callback with only the boxed message as an argument.\nA callback with the boxed message and the message info as …\nAn array of u8.\nAn array of u8.\nMain class responsible for sending requests to a ROS …\nTrait to be implemented by concrete Client structs.\nManage the lifecycle of an <code>rcl_client_t</code>, including …\nInvalid <code>rcl_client_t</code> given\nFailed to take a response from the client\nStruct that implements a Clock and wraps <code>rcl_clock_t</code>.\nA clock source that can be used to drive the contained …\nEnum to describe clock type. Redefined for readability and …\nShared state between nodes and similar entities.\nA specific duration.\nError that can be generated when doing operations on …\nAn f64 value.\nAn f64 value.\nAn array of f64.\nAn array of f64.\nA dynamic parameter that can change its type at runtime.\nUnspecified error\nInvalid <code>rcl_event_t</code> given\nFailed to take an event from the event handle\nA waitable entity used for waking up a wait set manually.\nThis will act as an infinite duration.\nAdditional options for initializing the Context.\nThe initial value that was selected is out of range.\nAn i64 value.\nAn i64 value.\nAn array of i64.\nAn array of i64.\nArgument to function was invalid\nArgument is not a valid log level rule\nArgument is not a valid parameter rule\nThe parameter type was not valid.\nAn invalid range was provided to a parameter declaration …\nArgument is not a valid remap rule\nFound invalid ROS argument while parsing\nKeep all messages, at least until other resource limits …\nKeep only the <code>depth</code> most recent messages.\n<code>rcl_lifecycle</code> state not registered\n<code>rcl_lifecycle</code> state registered\nA callback with only the loaned message as an argument.\nA message that is owned by the middleware, loaned for …\nA callback with the loaned message and the message info as …\nA parameter that must have a value This struct has …\nThe signal that establishes that a topic is alive is sent …\nConvenience trait for <code>Publisher::publish</code>.\nAdditional information about a received message.\nMismatched rmw identifier\nParameter was declared as non optional but no value was …\nA processing unit that can communicate with other nodes.\nA builder for creating a <code>Node</code>.\nInvalid <code>rcl_node_t</code> given\nInvalid node name\nInvalid node namespace\nStores a node’s name and namespace\nFailed to find node name\n<code>rcl_init()</code> not yet called\nSuccess\nA parameter that might not have a value, represented by …\nParameter value was out of the parameter’s range.\nThe override value that was provided has the wrong type. …\nBuilder used to declare a parameter. Obtain this by calling\nDescribes the parameter’s type. Similar to <code>ParameterValue</code>…\nOptions that can be attached to a parameter, such as …\nDescribes the range for paramter type T.\nContains all the possible type of ranges that can be …\nA parameter value.\nDescribes errors that can be generated when trying to set …\nA trait that describes a value that can be converted into …\nAllows access to all parameters via get / set functions, …\nThe value that the parameter was already set to has the …\nStruct for sending messages of type <code>T</code>.\nAn identifier for a publisher in the local context.\nInvalid <code>rcl_publisher_t</code> given\nEquivalent to <code>ClockQos</code> from the <code>rclcpp</code> package. Same as …\nEquivalent to <code>rmw_qos_profile_default</code> from the <code>rmw</code> package.\nEquivalent to <code>rmw_qos_profile_parameters</code> from the <code>rmw</code> …\nEquivalent to <code>rmw_qos_profile_parameter_events</code> from the <code>rmw</code>…\nEquivalent to <code>rmw_qos_profile_sensor_data</code> from the <code>rmw</code> …\nEquivalent to <code>rmw_qos_profile_services_default</code> from the <code>rmw</code>…\nEquivalent to <code>rmw_qos_profile_system_default</code> from the <code>rmw</code> …\nThe <code>DURABILITY</code> DDS QoS policy.\nA duration that can take two special values: System …\nThe <code>HISTORY</code> DDS QoS policy.\nThe <code>LIVELINESS</code> DDS QoS policy.\nA Quality of Service profile.\nThe <code>RELIABILITY</code> DDS QoS policy.\nThe type used to describe the range of this parameter.\nAn error originating in the <code>rcl</code> layer.\nStruct encapsulating an error message from the rcl layer …\nReturn codes of <code>rcl</code> functions.\nThe main error type.\nA write on a read-only parameter was attempted.\nA message that is owned by the middleware, loaned out for …\nA parameter that must have a value and cannot be written to\nA list of entities that are ready, returned by …\nA callback with only the message as an argument.\nA callback with the message and the message info as …\nGuarantee delivery of messages.\nAn error that occured when trying to convert a parameter …\nTime with behavior dependent on the <code>set_ros_time(bool)</code> …\nMain class responsible for responding to requests sent by …\nTrait to be implemented by concrete Service structs.\nManage the lifecycle of an <code>rcl_service_t</code>, including …\nInvalid <code>rcl_service_t</code> given\nService name (same as topic name) does not pass validation\nFailed to take a request from the service\nSingle-threaded executor implementation.\nSteady time, monotonically increasing but not necessarily …\nA string.\nA string.\nAn array of strings.\nAn array of strings.\nA string provided to <code>rclrs</code> could not be converted into a …\nStruct for receiving messages of type <code>T</code>.\nTrait to be implemented by concrete <code>Subscription</code>s.\nA trait for allowed callbacks for subscriptions.\nManage the lifecycle of an <code>rcl_subscription_t</code>, including …\nInvalid <code>rcl_subscription_t</code> given\nFailed to take a message from the subscription\nUse the default policy of the RMW layer.\nUse the default policy of the RMW layer.\nUse the default policy of the RMW layer.\nUse the default policy of the RMW layer.\nThis will use the RMW implementation’s default value, …\nWall time depending on the current system\nStruct that represents time.\nTimeout occurred\nGiven timer was canceled\nInvalid <code>rcl_timer_t</code> given\nContains topic endpoint information\nTopic name does not pass validation\nStores a list of types associated with each topic.\nRe-deliver old messages.\nParameter was stored in a static type and an operation on …\nAn unknown error originating in the <code>rcl</code> layer.\nTopic name substitution is unknown\nUnsupported return code\nDo not retain/request old messages.\nA struct for waiting on subscriptions and other waitable …\nGiven <code>rcl_wait_set_t</code> is empty\nGiven <code>rcl_wait_set_t</code> is full\nInvalid <code>rcl_wait_set_t</code> given\nExpected one type of lexeme but got another\nAdds a client to the wait set.\nAdds a guard condition to the wait set.\nAdd a node to the executor.\nAdds a service to the wait set.\nAdds a subscription to the wait set.\nSets node-specific command line arguments.\nSends a request with a callback to be called with the …\nIf true, any ROS specific namespacing conventions will be …\nSets the QoS profile reliability to …\nObtains a writable handle to a message owned by the …\nBuilds the node instance.\nCreates a <code>NodeBuilder</code> with the given name.\nSends a request and returns the response as a <code>Future</code>.\nThe callback function that runs when a request was …\nThe callback function that runs when a message was …\nRemoves all entities from the wait set.\nA list of clients that have potentially received responses.\nWeak reference to the clock that generated this time\nSets the QoSProfile for the clock subscription.\nSets the node’s clock type.\nReturns the clock’s <code>ClockType</code>.\nCompares self to rhs, if they can be compared (originated …\nSets the parameter’s human readable constraints. These …\nCounts the number of publishers for a given topic.\nCounts the number of subscriptions for a given topic.\nCreates a <code>Client</code>.\nCreates a <code>GuardCondition</code> with no callback.\nCreates a <code>GuardCondition</code> with a callback.\nCreates a new node in the empty namespace.\nCreates a <code>NodeBuilder</code>.\nCreates a <code>Publisher</code>.\nCreates a <code>Service</code>.\nCreates a <code>Subscription</code>.\nBytes identifying a publisher in the RMW implementation.\nSets the QoS profile deadline to the specified <code>Duration</code>.\nThe period at which messages are expected to be …\nCreates a <code>ParameterBuilder</code> that can be used to set …\nSets the default value for the parameter. The parameter …\nSets the default for an array-like parameter from an …\nThe default discriminator that chooses the initial value …\nSets the default for the parameter from a string-like …\nThe value given to the parameter builder as the default …\nSets the parameter’s human readable description.\nIf the parameter was set to a value before being declared …\nDecide what the initial value for the parameter will be …\nReturns the ROS domain ID that the context is using.\nReturns the ROS domain ID that the node is using.\nGet the domain_id that will be provided by these …\nThe durability policy.\nEnables or disables logging to rosout.\nTries to take a new response and run the callback or …\nTries to take a new request and run the callback with it.\nTries to take a new message and run the callback with it.\nExtract non-ROS arguments from program’s input arguments.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the fully qualified name of the node.\nReturns a clone of the most recent value of the parameter.\nReturns a clone of the most recent value of the parameter.\nReturns a clone of the most recent value of the parameter.\nTries to read a parameter of the requested type.\nReturns a list of topic names and types for clients …\nReturns the clock associated with this node.\nReturns a list of all node names.\nReturns a list of all node names with enclaves.\nReturns a list of topic names and types for publishers …\nReturns topic publisher info.\nReturns a list of service names and types for this node.\nReturns a list of topic names and types for services …\nReturns a list of topic names and types for subscriptions …\nReturns topic subscriptions info.\nReturns a list of all topic names and their types.\nA list of guard conditions that have been triggered.\nInternal function to get a reference to the <code>rcl</code> handle.\nInternal function to get a reference to the <code>rcl</code> handle.\nInternal function to get a reference to the <code>rcl</code> handle.\nThe history policy.\nIgnore any override that was given for this parameter.\nA string containing the RMW implementation’s name.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the callback into an enum.\nWrap the owned or borrowed message in a <code>Cow</code>.\nSets the QoS profile history to QoSHistoryPolicy::KeepAll.\nSets the QoS profile history to QoSHistoryPolicy::KeepLast …\nReturns the <code>ParameterKind</code> of the implemented type.\nSets the QoS profile lifespan to the specified <code>Duration</code>.\nThe age at which messages are considered expired and no …\nThe liveliness policy.\nSets the QoS profile liveliness lease duration to the …\nThe time within which the RMW publisher must show that it …\nLower limit, if set the parameter must be &gt;= l.\nDeclares the parameter as a Mandatory parameter, that must …\nReturns the name of the node.\nThe name of the node\nSets the node namespace.\nReturns the namespace of the node.\nThe namespace of the node\nCreates a new context.\nCreates a new executor.\nCreates a builder for a node with the given name.\nCreates a new node in the empty namespace.\nCreates a new guard condition with no callback.\nCreates a new wait set.\nCreates a new clock of the given <code>ClockType</code>.\nCreate a new InitOptions with all default values.\nCreates a new wait set and adds all waitable entities in …\nCreates a new guard condition with a callback.\nSame as <code>Context::new</code> except you can additionally provide …\nThe name of the endpoint node\nThe namespace of the endpoint node\nReturns the current clock’s timestamp.\nTimestamp in nanoseconds.\nChecks if the context is still valid.\nDeclares the parameter as an Optional parameter, that can …\nThe value given as an override value, usually as a command …\nA prior value that the parameter was set to before it was …\nSequence number of the received message set by the …\nPublishes the loaned message, falling back to regular …\nPublishes a message.\nAn identifier for the publisher that sent the message.\nSets the range for the parameter.\nThe valid ranges for the parameter value.\nDeclares the parameter as a ReadOnly parameter, that …\nTime when the message was received by the subscription.\nSequence number of the received message set by the …\nThe reliability policy.\nSets the QoS profile reliability to …\nRemove a node from the executor.\nCheck if a service server is available.\nA list of services that have potentially received requests.\nSets the parameter value. Returns …\nAssigns a value to the optional parameter, setting it to …\nTries to set a parameter with the requested value.\nSet the domain_id of an InitOptions, or reset it to the …\nSets the value of the current ROS time.\nTime when the message was published by the publisher.\nConvenience function for calling <code>spin_once</code> in a loop.\nConvenience function for calling …\nPolls the node for new messages and executes the …\nPolls the nodes for new messages and executes the …\nEnables or disables parameter services.\nCreates a new Clock with <code>ClockType::SteadyTime</code>\nStep size, if set and <code>lower</code> is set the parameter must be …\nA list of subscriptions that have potentially received …\nCreates a new Clock with <code>ClockType::SystemTime</code>\nFetches a new message.\nThis is a version of take() that returns a boxed message.\nObtains a read-only handle to a message owned by the …\nFetches a new request.\nFetches a new response.\nConvenience function for converting time to ROS message\nReturns the topic name of the publisher.\nReturns the topic name of the subscription.\nThe type of the topic\nSets the QoS profile durability to …\nTriggers this guard condition, activating the wait set, …\nUnsets the optional parameter value to <code>None</code>.\nUpper limit, if set the parameter must be &lt;= u.\nEnables or disables using global arguments.\nEnables usage of undeclared parameters for this node.\nSets the QoS profile durability to …\nBlocks until the wait set is ready, or until the timeout …\nTransform an InitOptions into a new one with a certain …\nCreates a new Clock with <code>ClockType::RosTime</code> and a matching …\nThe length of the publisher/subscription queue.\nThe length of the publisher/subscription queue.\nThe error code.\nThe error code.\nThe error indicating the position of the nul byte.\nThe error message set in the <code>rcl</code> layer or below.\nThe error message set in the <code>rcl</code> layer or below.\nThe string that contains a nul byte.")